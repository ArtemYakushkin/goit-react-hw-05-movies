{"version":3,"file":"static/js/464.d59458f2.chunk.js","mappings":"oPAEaA,EAAaC,EAAAA,GAAAA,GAAH,8KASVC,EAAaD,EAAAA,GAAAA,GAAH,oKAOVE,EAASF,EAAAA,GAAAA,EAAH,yM,UChBNG,EAAQH,EAAAA,GAAAA,IAAH,sFAMLI,EAAYJ,EAAAA,GAAAA,GAAH,8HAOTK,EAAiBL,EAAAA,GAAAA,EAAH,oJ,mBCM3B,EAfmB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KAEVC,EAA2CD,EAA3CC,UAAWC,EAAgCF,EAAhCE,cAAeC,EAAiBH,EAAjBG,aAC5BC,EAAU,UAAMC,EAAAA,GAAN,OAAkBF,GAC5BG,EAAWH,EAAeC,EAAaG,EAE7C,OACI,4BACI,SAACV,EAAD,CAAOW,IAAKF,EAAUG,IAAKP,KAC3B,SAACJ,EAAD,UAAYI,KACZ,SAACH,EAAD,UAAiBE,MAG5B,ECcD,EA1Ba,WAET,OAAkCS,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,QAAiBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAaM,EAAKlB,KAAtB,GACtC,GAAE,CAACa,KAGA,yBACKF,GAAaA,EAAUQ,QACpB,SAAC1B,EAAD,UACKkB,EAAUS,KAAI,SAAAC,GAAI,OACf,SAAC1B,EAAD,WACI,SAAC,EAAD,CAAYK,KAAMqB,KADLA,EAAKC,GADP,OAOvB,SAAC1B,EAAD,uBAIf,C","sources":["components/Cast/Cast.styled.jsx","components/CastActors/CastActors.styled.jsx","components/CastActors/CastActors.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ActorsList = styled.ul`\n    margin: 0 0 40px 0;\n    padding: 0;\n    list-style: none;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 10px;\n`;\n\nexport const ActorsItem = styled.li`\n    border: 1px solid #ffffff;\n    border-radius: 10px;\n    overflow: hidden;\n    box-shadow: 2px 2px 7px 3px rgba(255, 255, 255, 0.2);\n` ;\n\nexport const NoData = styled.p`\n    margin: 0;\n    padding: 30px;\n    color: #ffffff;\n    text-align: center;\n    font-family: 'Ubuntu', sans-serif;\n    font-size: 20px;\n    text-decoration: underline;\n`;\n\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n    width: 100%;\n    height: 350px;\n    object-fit: cover;\n`;\n\nexport const ActorName = styled.h3`\n    margin: 0;\n    color: #ffffff;\n    text-align: center;\n    font-family: 'Ubuntu', sans-serif;\n`;\n\nexport const ActorCharacter = styled.p`\n    margin: 0;\n    padding: 10px 0;\n    color: #ffffff;\n    text-align: center;\n    font-family: 'Ubuntu', sans-serif;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { Image, ActorName, ActorCharacter } from './CastActors.styled';\n\nimport { IMAGE_URL } from \"services/movieApi\";\nimport defaultImage from \"../../images/default-user.png\";\n\nconst CastActors = ({ cast }) => {\n\n    const { character, original_name, profile_path } = cast;\n    const fullImgUrl = `${IMAGE_URL}${profile_path}`;\n    const imageUrl = profile_path ? fullImgUrl : defaultImage;\n\n    return (\n        <div>\n            <Image src={imageUrl} alt={original_name} />\n            <ActorName>{original_name}</ActorName>\n            <ActorCharacter>{character}</ActorCharacter>\n        </div>\n    )\n};\n\nexport default CastActors;\n\nCastActors.propTypes = {\n    cast: PropTypes.shape({\n        character: PropTypes.string.isRequired,\n        original_name: PropTypes.string.isRequired,\n    })\n};","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ActorsList, ActorsItem, NoData } from \"./Cast.styled\";\nimport movieApi from \"services/movieApi\";\nimport CastActors from \"components/CastActors/CastActors\";\n\nconst Cast = () => {\n\n    const [movieCast, setMovieCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        movieApi.getCast(movieId).then(data => setMovieCast(data.cast))\n    }, [movieId]);\n\n    return (\n        <div>\n            {movieCast && movieCast.length ? (\n                <ActorsList>\n                    {movieCast.map(item => (\n                        <ActorsItem key={item.id}>\n                            <CastActors cast={item} />\n                        </ActorsItem>\n                    ))}\n                </ActorsList>\n            ) : (\n                <NoData>No data</NoData>\n            )}\n        </div>\n    )\n};\n\nexport default Cast;"],"names":["ActorsList","styled","ActorsItem","NoData","Image","ActorName","ActorCharacter","cast","character","original_name","profile_path","fullImgUrl","IMAGE_URL","imageUrl","defaultImage","src","alt","useState","movieCast","setMovieCast","movieId","useParams","useEffect","movieApi","then","data","length","map","item","id"],"sourceRoot":""}